stages=[  # DOP reduction
  # test each objective function separately:
  dict(
    name='pcfg', mode='pcfg',
    split=True, markorigin=True,
  ),
  dict(
    name='mpp', mode='plcfrs',
    prune=True, splitprune=True,
    dop='reduction',
    k=50, m=1000,
    kbest=True, sample=False,
    estimator="rfe", objective="mpp",
  ),

  dict(
	name='pcfg', mode='pcfg',
	split=True, markorigin=True,
  ),
  dict(
	name='mpd', mode='plcfrs',
	prune=True, splitprune=True,
	dop='reduction',
	k=50, m=1000,
	kbest=True, sample=False,
	estimator="rfe", objective="mpd",
  ),

  dict(
	name='pcfg', mode='pcfg',
	split=True, markorigin=True,
  ),
  dict(
	name='short', mode='plcfrs',
	prune=True, splitprune=True,
	dop='reduction',
	k=50, m=1000,
	kbest=True, sample=False,
	estimator="rfe", objective="shortest",
  ),

  dict(
    name='pcfg', mode='pcfg',
    split=True, markorigin=True,
  ),
  dict(
    name='sldop', mode='plcfrs',
    prune=True, splitprune=True,
    dop='reduction',
    k=50, m=1000,
    kbest=True, sample=False,
    estimator="rfe", objective="sl-dop",
  ),
  
  dict(
    name='pcfg', mode='pcfg',
    split=True, markorigin=True,
  ),
  dict(
    name='slsimp', mode='plcfrs',
    prune=True, splitprune=True,
    dop='reduction',
    k=50, m=1000,
    kbest=True, sample=False,
    estimator="rfe", objective="sl-dop-simple",
  ),

  dict(
    name='pcfg', mode='pcfg',
    split=True, markorigin=True,
  ),
  dict(
    name='bon', mode='plcfrs',
    prune=True, splitprune=True,
    dop='reduction',
    k=50, m=1000,
    kbest=True, sample=False,
    estimator='bon', objective='mpp',
  ),

  # test rest of parameters together:
  dict(
    name='post', mode='pcfg-posterior',
    split=True, markorigin=True,
  ),
  dict(
    name='etc', mode='plcfrs',
    prune=True, splitprune=True,
    dop='reduction',
    k=1e-5, m=1000,
    kbest=True, sample=False,
    estimator="ewe", objective="mpp",
  ),

  dict(
    name='plcfrs', mode='plcfrs',
  ),
  dict(
    name='rerank', mode='dop-rerank',
    dop='reduction',
    prune=True, k=50,
    kbest=True, sample=False,
    estimator="rfe", objective="mpp",
  ),

  dict(
    name='pcfg', mode='pcfg',
    split=True, markorigin=True,
  ),
  dict(
    name='packed', mode='plcfrs',
    prune=True, splitprune=True,
    dop='reduction',
    packedgraph=True,
    k=50, m=1000,
    kbest=True, sample=False,
    estimator="rfe", objective="mpp",
  ),
],

evalparam=None, # EVALB-style parameter file
corpusfmt="discbracket", # choices: export, bracket, discbracket
traincorpus=dict(
	path="t2.dbr",
	maxwords=100,
	numsents=5,
),
testcorpus=dict(
	path="t2.dbr",
	maxwords=100,
	numsents=1,
	skiptrain=True,
	skip=0,
),
punct=None,
functions=None,
morphology=None,
transformations=None,
relationalrealizational=None,
postagging=None,
binarization=dict(
	method="default",
	factor="right",
	headrules=None,
	h=1,
	v=1,
),
verbosity=2,
numproc=1,
