stages=[  # Double-DOP without discontinuity (both coarse and fine are PCFG)
  # test each objective function separately:
  dict(
	name='pcfg', mode='pcfg',
	split=True, markorigin=True,
  ),
  dict(
	name='mpp', mode='pcfg',
	prune=True, splitprune=True,
	dop=True, usedoubledop=True,
	iterate=False, complement=False,
	k=50, m=1000,
	kbest=True, sample=False,
	estimator="rfe", objective="mpp",
  ),

  dict(
	name='pcfg', mode='pcfg',
	split=True, markorigin=True,
  ),
  dict(
	name='mpd', mode='pcfg',
	prune=True, splitprune=True,
	dop=True, usedoubledop=True,
	iterate=False, complement=False,
	k=50, m=1000,
	kbest=True, sample=False,
	estimator="rfe", objective="mpd",
  ),

  dict(
	name='pcfg', mode='pcfg',
	split=True, markorigin=True,
  ),
  dict(
	name='short', mode='pcfg',
	prune=True, splitprune=True,
	dop=True, usedoubledop=True,
	iterate=False, complement=False,
	k=50, m=1000,
	kbest=True, sample=False,
	estimator="rfe", objective="shortest",
  ),

  dict(
	name='pcfg', mode='pcfg',
	split=True, markorigin=True,
  ),
  dict(
	name='sldop', mode='pcfg',
	prune=True, splitprune=True,
	dop=True, usedoubledop=True,
	iterate=False, complement=False,
	k=50, m=1000,
	kbest=True, sample=False,
	estimator="rfe", objective="sl-dop",
  ),
  
  dict(
	name='pcfg', mode='pcfg',
	split=True, markorigin=True,
  ),
  dict(
	name='slsimp', mode='pcfg',
	prune=True, splitprune=True,
	dop=True, usedoubledop=True,
	iterate=False, complement=False,
	k=50, m=1000,
	kbest=True, sample=False,
	estimator="rfe", objective="sl-dop-simple",
  ),

  # test rest of parameters together:
  dict(
	name='post', mode='pcfg-posterior',
	split=True, markorigin=True,
  ),
  dict(
	name='etc', mode='pcfg',
	prune=True, splitprune=True,
	dop=True, usedoubledop=True,
	iterate=True, complement=False,
	k=1e-5, m=1000,
	kbest=True, sample=False,
	estimator="ewe", objective="mpp",
  ),
],

evalparam=None, # EVALB-style parameter file
corpusfmt="bracket", # choices: export, bracket, discbracket
traincorpus=dict(
	path="t1.mrg",
	maxwords=100,
	numsents=3,
),
testcorpus=dict(
	path="t1.mrg",
	maxwords=100,
	numsents=1,
	skiptrain=True,
	skip=0,
),
punct=None,
functions=None,
morphology=None,
transformations=None,
relationalrealizational=None,
postagging=None,
binarization=dict(
	method="default",
	factor="right",
	headrules=None,
	h=1,
	v=1,
),
verbosity=2,
numproc=1,
